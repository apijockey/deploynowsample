{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"APIJockey Text","text":"<p>APIJockey Text is a text editor that supports configurable syntax highlighting for all kinds of text formats. This text editor has been developed to display and edit structured text like markdown, csv, json or different types of xml. APIJockey Text comes free of charges with an extensive user documentation.</p> <p>This documentation has been written with APIJockey Text in markdown and transformed to HTML with freely available tools. </p>"},{"location":"#get-in-contact-with-us","title":"Get in contact with us","text":"<p>Our teams works hard to create a full-featured and bug-free software. Although we run unit tests regularly and use our software ourselves, we sometimes miss to find bugs.  Even more, software development lives from user feedback, so we invite you to share your thoughts, ideas and trouble with us.  You can send us an email on servicedesk@apijockey.com, attach screenshots and send us text to provide guidance what you would like to see (or not to see ;-) ) in a future release.</p>"},{"location":"#important-features","title":"Important Features","text":"<ul> <li>Predefined, user-configurable syntax highlighting</li> <li>Search/Replace with simple text and regular expressions</li> <li>Support for light and dark mode</li> <li>user-configurable font settings </li> <li>NON-SLA service desk email address for requests and bug reports</li> <li>Pretty-print operations for a number of predefined text formats like Json, xml and Yaml.</li> <li>Toolbars for primary and secondary actions</li> <li>Available for MacOS (v13) </li> </ul>"},{"location":"#why-another-text-editor","title":"Why another text editor","text":"<p>Text editors are an important tool, when it comes to business analysis, scripting and testing. There are lots of editor outside, even on the mac from console-based vi and emacs to the the visual editors like sublime, BBEditor and the builtin textedit application, just to mention some of them. </p> <p>There are people that call programming tools like VS Code or XCode an editor, but that's not well-suited for non-programmers.</p> <p>What we were looking for is an editor that supports markup languages like XML Yaml, JSON and MD (Markdown) and many of the other syntaxes that have nothing to  do with programming.  Rather the interest is to read and edit text-based structured data in a comfortable way, navigate and search them and apply basic search/replace/copy/paste.</p> <p>We rarely look into huge log files, sometimes in CSV-files, but then again, we need some helpful syntax highlighting, preferably supporting user-specific syntax.  Also, structured data are better readable with type-specific  pretty print functionality for structured text, which we are often missing.</p> <p>Finally, we wanted to write our online help content with this editor, as we use mkdocs, markdown and Yaml are our default file types. If you feel you have similar requirements, APIJockey Text might be a good choice for you.</p>"},{"location":"#getting-started-on-macos","title":"Getting Started on MacOS","text":"<p>When you launch APIJockey Text, you will see an empty application window with toolbar commands for important actions:</p>"},{"location":"#first-steps-tutorial","title":"First Steps tutorial","text":"<ul> <li>Most important commands can be found in the toolbar. See </li> <li>Open files are displayed in the section open files in the sidebar. When you want to work on a file, you select it in the sidebar.</li> <li>You may want to keep several files open, to edit or view them side-by-side. In this case, mark them as sticky files.</li> <li>You can search and replace in open files. Use the [commands.md#search_and_replace] top form in this case.</li> <li>Navigation in a file can be performed with keyboard-shortcuts or via mouse. There are several powerful options, make sure to read details in Navigating files.</li> <li> <p>Syntax highlighting is an advanced features, which requires Regular expressions. APIJockey Text ships with small set of predefined highlighting expressions, which can be extended and customized. See more in Syntax Highlighting</p> </li> <li> <p>Overview of the macOS version</p> </li> </ul>"},{"location":"commands/","title":"Commands","text":"<p>When you open Apijockey Text you will see this window: </p>"},{"location":"commands/#sidebar","title":"Sidebar","text":"<p>You see the sidebar with the list of open files on the left hand side. The list of open files is empty, when  you start Apijockey Text. Toggle sidebar hides/shows the sidebar with the list of open files.::</p> <p>The sidebar is divided in two sections: - open files, this is the section where all files are place, when you create them or load them from disk. - sticky files, you want to choose to keep files always open to view or edit them in parallel.</p> <p></p> <p>A file in the open files list will only be loaded into an editor, if it selected, whereas an file in the sticky files section will always remain in a editor.  Both files will be kept open and editable side-by-side, so as a good practice you would keep only these files as sticky files that you really most of the time.</p>"},{"location":"commands/#basic-instructions","title":"Basic instructions","text":"<p>The sidebar contains all open files the in the section open files. It supports multi-selection. A selection opens the file AND activates Key-stroke-actions. The following screenshot shows two selected markdown files, which are used to create this online help:</p> <p></p> <p>You can edit and view text files side-by-side. You can also search in each file while other files are open. A dash behind the name ** commands.md** in this screenshot indicates a file with unsaved changes.</p>"},{"location":"commands/#sidebar-shortcuts","title":"Sidebar Shortcuts","text":"<p>Sidebar keystroke commands apply on all selected files.</p> <ul> <li>CMD-e saves/exports a selected file with a different name</li> <li>CMD-l loads an existing file from disc</li> <li>CMD-s saves the selected files</li> <li>CMD-r removes the selected files from the open files or sticky files and closes the file.</li> </ul>"},{"location":"commands/#sidebar-context-menu","title":"Sidebar context menu","text":"<p>The sidebar context menu opens when you  - CMD-Click with your mouse - two-finger-click on your trackpad</p> <p></p> <ul> <li>open files opens a list of files from a system builtin file open dialog.</li> <li>close selected files will close the selected files and eventually ask for confirmation in case of files that have unsaved changes.</li> <li>save selected files will save the selected files.</li> <li>copy selection will copy the file without creating a file on the disc</li> <li>save files as will save the selected files on a different path on the disc.</li> <li>unselect files simplifies unselecting files</li> <li>mark as sticyk file moves the selected files in the section sticky files. They will always remain open in an editor, which allows you to edit files side-by-side.</li> <li>unmark as sticky file moves the selected files back to the section open files, so they will disappear from the editor when not selected.</li> </ul> <p>When you create new files or open existing files, the list of open files is visible under the section open files.</p>"},{"location":"commands/#toolbar-commands","title":"Toolbar commands","text":"<p>The toolbar contains primary and secondary commands that are often used when working with files:</p> <p></p>"},{"location":"commands/#primary-toolbar-commands","title":"Primary toolbar commands","text":"<ul> <li> <p>new file:   create a new file in ApiJockey Text. This will not include saving to disk. You can do this at any later point in time with the    button save selected file as new file.</p> </li> <li> <p>open file:   Opens a default MacOS/iPadOS system dialog to select a file.   APIJockey Text is a sandboxed application, which means access to user based files is limited.   When you first open a file with the file open dialog, you will be prompted to grant this permission to APIJockey Text.</p> </li> <li> <p>save file:    Saves the current content under the specified file name/file url visible in the list of open files</p> </li> <li> <p>close file:   Closes the selected file and asks user how to proceed, in case the file has unsaved changes.</p> </li> </ul>"},{"location":"commands/#secondary-toolbar-commands","title":"Secondary toolbar commands","text":"<ul> <li> <p>save selected file as new file:    Save a copy of the selected file under a new name/folder</p> </li> <li> <p>pretty print / update highlighting:   All files can have user specific syntax highlighting. Some files (XML/JSON/YML) support Pretty Printing   When you press this toolbar button, syntax highlighting is reevaluated and pretty print is performed, when applicable.</p> </li> <li> <p>share file:   opens a MacOS/iPadOS system dialog to share/send this file</p> </li> <li> <p>Orthographic highlighting:   opens a dialog to select/unselect options to be highlighted in open files:</p> </li> <li>spelling errors</li> <li>highlight dates</li> <li>highlight links</li> <li>highlight phone numbers</li> <li>highlight addresses Orthographic highlighting is set for all open files and displays unknown words in pink-like color, special content like dates or links in a grey color.</li> </ul>"},{"location":"commands/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"<ul> <li>arrow up positions the cursor one line up</li> <li>arrow down positions the cursor one line down</li> <li>arrow left positions the cursor one character left</li> <li> <p>arrow right positions the cursor one character right</p> </li> <li> <p>CMD + arrow up positions the cursor at the beginning of the document</p> </li> <li>CMD + arrow down positions the cursor at the end of the document</li> <li>CMD + arrow left positions the cursor at the beginning of the line</li> <li>CMD + arrow right positions the cursor at the end of the line</li> <li>CMD + A selects the whole document</li> <li>CMD + C copies the current selection the current selection to the system pasteboard.</li> <li> <p>CMD + V paste copies the system pasteboard in the current selection</p> </li> <li> <p>SHIFT + arrow up positions the cursor one line up and extends the selection</p> </li> <li>SHIFT + arrow down positions the cursor one line down and extends the selection</li> <li>SHIFT + arrow left positions the cursor one character left and extends the selection</li> <li> <p>SHIFT + arrow right positions the cursor one character right and extends the selection</p> </li> <li> <p>OPTION + SHIFT + arrow up positions the cursor one paragraph up and extends the selection</p> </li> <li> <p>OPTION + SHIFT arrow down positions the cursor one paragraph down and extends the selection</p> </li> <li> <p>CMD + SHIFT + arrow up positions the cursor at the end of the document and extends the selection</p> </li> <li>CMD + SHIFT arrow down positions the cursor at the beginning of the document and extends the selection</li> <li>CMD + SHIFT + arrow left positions the cursor at the end of the line and extends the selection</li> <li>CMD + SHIFT arrow right positions the cursor at the beginning of the line and extends the selection</li> </ul>"},{"location":"commands/#mouse-interaction","title":"Mouse interaction","text":"<p>You may use your mouse for scrolling, up and down and selection.</p>"},{"location":"settings/","title":"Settings","text":"<p>Settings are global configurations on: - font family and font size - predefined syntax highlighting settings - user defined syntax highlighting settings</p> <p>The Settings dialog can be opened by: - keyboard shortcut 'CMD' + ',' (comma) - menu entry 'APIJockey Text' -&gt; 'Settings...'</p> <p></p>"},{"location":"settings/#font-settings","title":"Font settings","text":"<p>Your computer and Operating system version will provide a list of fixed size font families like 'Courier'. You may want to use a specific font family for viewing and editing your files.</p> <p></p>"},{"location":"settings/#syntax-highlighting","title":"Syntax highlighting","text":"<p>Syntax highlighting will help to read structured data while using different color for different content. The rules for syntax highlighting are written in regular expression and a set of predefined rules are provided 'as is'.</p>"},{"location":"settings/#predefined-syntax-highlighting","title":"Predefined syntax highlighting","text":"<p> You may want to change these rules, create new rules, delete rules or create new file types with new sets of rules.</p> <p>The predefined syntax highlighting  - shows the underlying file name extension and the mime type.  - allows for creating user-defined settings. When you click this button, the list entry to the left will change its list text color to indicate that this entry is overridden.  - displays predefined regular expressions.</p>"},{"location":"settings/#user-defined-syntax-highlighting","title":"user-defined syntax highlighting","text":"<p>You may want to change these rules, create new rules, delete rules or create new file types with new sets of rules.</p>"},{"location":"settings/#user-defined-syntax-highlighting_1","title":"user defined syntax highlighting","text":"<p>A user-defined syntax highlighting needs a unique file extension. You can create a user-defined setting based on a predefined setting. You select user defined syntax highlighting in the settings sidebar.</p> <p></p> <p>This will show another sidebar with file extensions and mime-type information.</p> <p>With a selected file extension, you have the option to configure the syntax highlighting settings/rules.</p> <ul> <li>reset to default settings deletes the whole user defined syntax highlighting rules and resets to defaults settings if they ship as predefined settings.</li> <li>delete selection highlighting rules removes the currently selected rules.</li> <li>add syntax highlighting rule will add a new rule.</li> <li> <p>highlighting color for selected text type indicates the color used to the selected text type. The selected text type gets its name from text element that are present in wide range of texts, like Bracket or HEADER1 and will always configure the same highlighting color.</p> </li> <li> <p>the Play button checks if the regex is valid and supported by the integrated regex engine.</p> </li> </ul>"}]}